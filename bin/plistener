#!/usr/bin/env ruby

require 'commander/import'
require 'plistener'

# :name is optional, otherwise uses the basename of this executable
program :name, 'plistener'
program :version, Plistener::VERSION
program :description, "watch OSX plist preference files and record changes."

def working_dir args, options
  working_dir = args.first || Dir.pwd
end

command :run do |c|
  c.option '--config STRING', String, 'the config file to use'
  c.syntax = "plistener run [options] [working_dir=.]"
  c.description = "run the listener from the terminal, dumping to stdout."
  c.action do |args, options|
    Plistener.new(working_dir(args, options)).run
  end
end

command :clear do |c|
  c.description = "remove all the change files in `<working_dir>/changes`."
  c.syntax = "plistener clear [working_dir=.]"
  c.action do |args, options|
    Plistener.new(working_dir(args, options)).clear
  end
end

command :reset do |c|
  c.description = "remove all data in `<working_dir>/data` and change files in `<working_dir>/changes`."
  c.syntax = "plistener reset [working_dir=.]"
  c.action do |args, options|
    Plistener.new(working_dir(args, options)).reset
  end
end

command :ui do |c|
  c.action do |args, options|
    require 'plistener/ui'
    Plistener::UI.run working_dir(args, options)
  end
end
